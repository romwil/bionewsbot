# BioNewsBot Environment Configuration
# Copy this file to .env and update with your actual values

# ============================================
# GENERAL SETTINGS
# ============================================
# Environment: development, staging, production
ENVIRONMENT=production
# Debug mode (true/false)
DEBUG=false
# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# ============================================
# DATABASE CONFIGURATION (PostgreSQL)
# ============================================
# Database connection settings
POSTGRES_DB=bionewsbot
POSTGRES_USER=bionewsbot
POSTGRES_PASSWORD=changeme-strong-password
POSTGRES_PORT=5432

# Database URL (constructed from above, don't modify)
# DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}

# ============================================
# REDIS CONFIGURATION
# ============================================
# Redis cache settings
REDIS_PASSWORD=changeme-redis-password
REDIS_PORT=6379

# Redis URL (constructed from above, don't modify)
# REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0

# ============================================
# BACKEND API CONFIGURATION
# ============================================
# API Security
API_KEY=your-secure-api-key-here
SECRET_KEY=your-secret-key-for-jwt-tokens

# CORS Settings (comma-separated origins)
CORS_ORIGINS=http://localhost:3000,https://yourdomain.com

# Backend Port
BACKEND_PORT=8000

# ============================================
# EXTERNAL API KEYS
# ============================================
# OpenAI API for AI analysis
OPENAI_API_KEY=sk-your-openai-api-key

# PubMed API for scientific literature
PUBMED_API_KEY=your-pubmed-api-key

# News API for general news
NEWS_API_KEY=your-newsapi-key

# ============================================
# SCHEDULER SERVICE CONFIGURATION
# ============================================
# Worker settings
WORKER_CONCURRENCY=4
# Schedule interval in seconds (300 = 5 minutes)
SCHEDULE_INTERVAL=300

# ============================================
# NOTIFICATION SERVICE CONFIGURATION
# ============================================
# Slack Bot Configuration
SLACK_BOT_TOKEN=xoxb-your-slack-bot-token
SLACK_SIGNING_SECRET=your-slack-signing-secret
SLACK_APP_TOKEN=xapp-your-slack-app-token

# Notification Service Port
NOTIFICATIONS_PORT=8001

# Rate limiting
RATE_LIMIT_ENABLED=true

# ============================================
# FRONTEND CONFIGURATION
# ============================================
# Frontend settings
FRONTEND_PORT=3000
NODE_ENV=production
# Public API URL (what the browser uses)
NEXT_PUBLIC_API_URL=http://localhost:8000

# ============================================
# NGINX CONFIGURATION (Production)
# ============================================
# Nginx ports
NGINX_HTTP_PORT=80
NGINX_HTTPS_PORT=443

# ============================================
# MONITORING CONFIGURATION (Optional)
# ============================================
# Prometheus
PROMETHEUS_PORT=9090

# Grafana
GRAFANA_PORT=3001
GRAFANA_PASSWORD=admin-change-this

# ============================================
# DOCKER BUILD CONFIGURATION
# ============================================
# Python version for backend services
PYTHON_VERSION=3.11
# Node.js version for frontend
NODE_VERSION=20

# ============================================
# DEVELOPMENT OVERRIDES
# ============================================
# For development, create a .env.development file with:
# ENVIRONMENT=development
# DEBUG=true
# LOG_LEVEL=DEBUG
# CORS_ORIGINS=http://localhost:3000
