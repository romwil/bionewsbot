version: '3.8'

services:
  # Redis for job queue and results
  redis:
    image: redis:7-alpine
    container_name: bionewsbot-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bionewsbot-network

  # Main scheduler service
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bionewsbot-scheduler
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - API_BASE_URL=http://backend:8000
      - PROMETHEUS_PORT=9090
      - HEALTH_CHECK_PORT=8001
    ports:
      - "8001:8001"  # Health check
      - "9090:9090"  # Prometheus metrics
    volumes:
      - ./config:/app/config
      - ./logs:/app/logs
      - archive_data:/var/bionewsbot/archive
    depends_on:
      redis:
        condition: service_healthy
    command: python scheduler_service.py
    restart: unless-stopped
    networks:
      - bionewsbot-network

  # Celery worker (can be scaled)
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - API_BASE_URL=http://backend:8000
      - CELERY_HOSTNAME=worker@%h
    volumes:
      - ./config:/app/config
      - ./logs:/app/logs
      - archive_data:/var/bionewsbot/archive
    depends_on:
      redis:
        condition: service_healthy
    command: python celery_worker.py
    restart: unless-stopped
    deploy:
      replicas: 2
    networks:
      - bionewsbot-network

  # Celery Flower for monitoring (optional)
  flower:
    image: mher/flower:2.0
    container_name: bionewsbot-flower
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/2
      - FLOWER_PORT=5555
    ports:
      - "5555:5555"
    depends_on:
      - redis
    command: celery --broker=redis://redis:6379/2 flower
    restart: unless-stopped
    networks:
      - bionewsbot-network

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: bionewsbot-prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    restart: unless-stopped
    networks:
      - bionewsbot-network

  # Grafana for visualization (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: bionewsbot-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - bionewsbot-network

volumes:
  redis_data:
  archive_data:
  prometheus_data:
  grafana_data:

networks:
  bionewsbot-network:
    external: true
    name: bionewsbot-network
