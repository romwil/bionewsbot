version: '3.8'

services:
  # Redis for caching and rate limiting
  redis:
    image: redis:7-alpine
    container_name: bionewsbot-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-changeme}
    healthcheck:
      test: ["CMD", "redis-cli", "--auth", "${REDIS_PASSWORD:-changeme}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Notification Service
  notifications:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bionewsbot-notifications
    restart: unless-stopped
    ports:
      - "8001:8001"
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
      - DB_HOST=postgres  # Assumes postgres is running in parent docker-compose
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    networks:
      - bionewsbot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/webhooks/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Prometheus for metrics (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: bionewsbot-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - bionewsbot-network

  # Grafana for visualization (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: bionewsbot-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"  # Different port to avoid conflict
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - bionewsbot-network
    depends_on:
      - prometheus

volumes:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  bionewsbot-network:
    external: true
    name: bionewsbot_default  # Connect to main project network
